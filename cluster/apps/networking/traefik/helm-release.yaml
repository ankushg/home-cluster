---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      chart: traefik
      version: 10.21.1
      sourceRef:
        kind: HelmRepository
        name: traefik-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  dependsOn:
    - name: cert-manager
      namespace: cert-manager
  values:
    deployment:
      kind: Deployment
      replicas: 1
    service:
      enabled: true
      type: LoadBalancer
      annotations:
        metallb.universe.tf/loadBalancerIPs: |-
          ${METALLB_TRAEFIK_ADDR}
      spec:
        externalTrafficPolicy: Local
    logs:
      general:
        format: json
        level: DEBUG
      access:
        enabled: true
        format: json
    ingressClass:
      enabled: true
      isDefaultClass: true
      fallbackApiVersion: v1
    ingressRoute:
      dashboard:
        enabled: false
    globalArguments:
      - "--api.insecure=true"
      - "--serverstransport.insecureskipverify=true"
      - "--providers.kubernetesingress.ingressclass=traefik"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entryPoint=metrics"
    additionalArguments:
      - "--providers.kubernetesingress.ingressendpoint.ip=${SVC_TRAEFIK_ADDR}"
      - "--providers.kubernetescrd.allowexternalnameservices=true"
      - "--providers.kubernetesingress.allowexternalnameservices=true"
    ports:
      traefik:
        expose: true
      web:
        redirectTo: websecure
      websecure:
        tls:
          enabled: true
          options: "default"
      metrics:
        port: 8082
        expose: true
        exposedPort: 8082
      traefikhub-tunl:
        port: 9901
        expose: true
        exposedPort: 9901
        protocol: TCP
    tlsOptions:
      default:
        minVersion: VersionTLS12
        maxVersion: VersionTLS13
        sniStrict: true
    pilot:
      enabled: true
      token: "${SECRET_TRAEFIK_PILOT_TOKEN}"
    experimental:
      hub: true
      plugins:
        enabled: true
    hub: {}
    metrics:
      prometheus:
        addRouterLabels: true
    resources:
      requests:
        memory: 100Mi
        cpu: 500m
      limits:
        memory: 500Mi
